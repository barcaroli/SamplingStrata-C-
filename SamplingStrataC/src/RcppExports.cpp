// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Rcpp_sortDelta
IntegerVector Rcpp_sortDelta(IntegerVector x);
RcppExport SEXP _SamplingStrataC_Rcpp_sortDelta(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_sortDelta(x));
    return rcpp_result_gen;
END_RCPP
}
// aggrStrata_RcppOpen
NumericMatrix aggrStrata_RcppOpen(DataFrame strata, int nvar, IntegerVector vett, int censiti, int dominio);
RcppExport SEXP _SamplingStrataC_aggrStrata_RcppOpen(SEXP strataSEXP, SEXP nvarSEXP, SEXP vettSEXP, SEXP censitiSEXP, SEXP dominioSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type strata(strataSEXP);
    Rcpp::traits::input_parameter< int >::type nvar(nvarSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vett(vettSEXP);
    Rcpp::traits::input_parameter< int >::type censiti(censitiSEXP);
    Rcpp::traits::input_parameter< int >::type dominio(dominioSEXP);
    rcpp_result_gen = Rcpp::wrap(aggrStrata_RcppOpen(strata, nvar, vett, censiti, dominio));
    return rcpp_result_gen;
END_RCPP
}
// uppercasevec
CharacterVector uppercasevec(DataFrame df);
RcppExport SEXP _SamplingStrataC_uppercasevec(SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(uppercasevec(df));
    return rcpp_result_gen;
END_RCPP
}
// grepRcpp
int grepRcpp(const std::string& pattern, StringVector& x);
RcppExport SEXP _SamplingStrataC_grepRcpp(SEXP patternSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type pattern(patternSEXP);
    Rcpp::traits::input_parameter< StringVector& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(grepRcpp(pattern, x));
    return rcpp_result_gen;
END_RCPP
}
// seqRcpp
Rcpp::IntegerVector seqRcpp(int vx);
RcppExport SEXP _SamplingStrataC_seqRcpp(SEXP vxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type vx(vxSEXP);
    rcpp_result_gen = Rcpp::wrap(seqRcpp(vx));
    return rcpp_result_gen;
END_RCPP
}
// int_to_string
std::string int_to_string(int& addr);
RcppExport SEXP _SamplingStrataC_int_to_string(SEXP addrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int& >::type addr(addrSEXP);
    rcpp_result_gen = Rcpp::wrap(int_to_string(addr));
    return rcpp_result_gen;
END_RCPP
}
// paste3
CharacterVector paste3(CharacterVector lhs, CharacterVector rhs);
RcppExport SEXP _SamplingStrataC_paste3(SEXP lhsSEXP, SEXP rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type lhs(lhsSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rhs(rhsSEXP);
    rcpp_result_gen = Rcpp::wrap(paste3(lhs, rhs));
    return rcpp_result_gen;
END_RCPP
}
// repRcpp
NumericVector repRcpp(NumericVector x, IntegerVector times);
RcppExport SEXP _SamplingStrataC_repRcpp(SEXP xSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(repRcpp(x, times));
    return rcpp_result_gen;
END_RCPP
}
// repRcpp2
NumericVector repRcpp2(int x, int n);
RcppExport SEXP _SamplingStrataC_repRcpp2(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(repRcpp2(x, n));
    return rcpp_result_gen;
END_RCPP
}
// repRcppdouble
NumericVector repRcppdouble(double x, int n);
RcppExport SEXP _SamplingStrataC_repRcppdouble(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(repRcppdouble(x, n));
    return rcpp_result_gen;
END_RCPP
}
// testDFtoNM1
NumericMatrix testDFtoNM1(DataFrame x);
RcppExport SEXP _SamplingStrataC_testDFtoNM1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(testDFtoNM1(x));
    return rcpp_result_gen;
END_RCPP
}
// ordina_variabiliRcpp
NumericMatrix ordina_variabiliRcpp(DataFrame& dati, CharacterVector prefisso, int& n_var);
RcppExport SEXP _SamplingStrataC_ordina_variabiliRcpp(SEXP datiSEXP, SEXP prefissoSEXP, SEXP n_varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type dati(datiSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type prefisso(prefissoSEXP);
    Rcpp::traits::input_parameter< int& >::type n_var(n_varSEXP);
    rcpp_result_gen = Rcpp::wrap(ordina_variabiliRcpp(dati, prefisso, n_var));
    return rcpp_result_gen;
END_RCPP
}
// ndomRcpp
StringVector ndomRcpp(CharacterVector prefisso, int n_vars);
RcppExport SEXP _SamplingStrataC_ndomRcpp(SEXP prefissoSEXP, SEXP n_varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type prefisso(prefissoSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    rcpp_result_gen = Rcpp::wrap(ndomRcpp(prefisso, n_vars));
    return rcpp_result_gen;
END_RCPP
}
// nvaluesRcpp
IntegerVector nvaluesRcpp(StringVector nom_dom, NumericMatrix dom);
RcppExport SEXP _SamplingStrataC_nvaluesRcpp(SEXP nom_domSEXP, SEXP domSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type nom_dom(nom_domSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dom(domSEXP);
    rcpp_result_gen = Rcpp::wrap(nvaluesRcpp(nom_dom, dom));
    return rcpp_result_gen;
END_RCPP
}
// crea_disjRcpp
arma::mat crea_disjRcpp(DataFrame data, CharacterVector pref);
RcppExport SEXP _SamplingStrataC_crea_disjRcpp(SEXP dataSEXP, SEXP prefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type pref(prefSEXP);
    rcpp_result_gen = Rcpp::wrap(crea_disjRcpp(data, pref));
    return rcpp_result_gen;
END_RCPP
}
// dfrow
CharacterVector dfrow(DataFrame& x, int num);
RcppExport SEXP _SamplingStrataC_dfrow(SEXP xSEXP, SEXP numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type num(numSEXP);
    rcpp_result_gen = Rcpp::wrap(dfrow(x, num));
    return rcpp_result_gen;
END_RCPP
}
// int_to_charvec
CharacterVector int_to_charvec(int addr);
RcppExport SEXP _SamplingStrataC_int_to_charvec(SEXP addrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type addr(addrSEXP);
    rcpp_result_gen = Rcpp::wrap(int_to_charvec(addr));
    return rcpp_result_gen;
END_RCPP
}
// paste4
std::string paste4(CharacterVector lhs, CharacterVector rhs);
RcppExport SEXP _SamplingStrataC_paste4(SEXP lhsSEXP, SEXP rhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type lhs(lhsSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rhs(rhsSEXP);
    rcpp_result_gen = Rcpp::wrap(paste4(lhs, rhs));
    return rcpp_result_gen;
END_RCPP
}
// testDFtoNM3
NumericMatrix testDFtoNM3(DataFrame x);
RcppExport SEXP _SamplingStrataC_testDFtoNM3(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(testDFtoNM3(x));
    return rcpp_result_gen;
END_RCPP
}
// ordina_variabiliRcpp2
NumericMatrix ordina_variabiliRcpp2(DataFrame dati, CharacterVector prefisso, int n_var);
RcppExport SEXP _SamplingStrataC_ordina_variabiliRcpp2(SEXP datiSEXP, SEXP prefissoSEXP, SEXP n_varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type dati(datiSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type prefisso(prefissoSEXP);
    Rcpp::traits::input_parameter< int >::type n_var(n_varSEXP);
    rcpp_result_gen = Rcpp::wrap(ordina_variabiliRcpp2(dati, prefisso, n_var));
    return rcpp_result_gen;
END_RCPP
}
// cbindRcpp
arma::mat cbindRcpp(arma::mat a, arma::mat b);
RcppExport SEXP _SamplingStrataC_cbindRcpp(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(cbindRcpp(a, b));
    return rcpp_result_gen;
END_RCPP
}
// cbindRcpp1
NumericMatrix cbindRcpp1(NumericMatrix a, NumericMatrix b);
RcppExport SEXP _SamplingStrataC_cbindRcpp1(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(cbindRcpp1(a, b));
    return rcpp_result_gen;
END_RCPP
}
// vecconcat
arma::rowvec vecconcat(arma::rowvec x, arma::rowvec y);
RcppExport SEXP _SamplingStrataC_vecconcat(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(vecconcat(x, y));
    return rcpp_result_gen;
END_RCPP
}
// stringrepRcpp
CharacterVector stringrepRcpp(StringVector x, int y);
RcppExport SEXP _SamplingStrataC_stringrepRcpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(stringrepRcpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// concat
std::vector<std::string> concat(std::vector<std::string> x, std::vector<std::string> y);
RcppExport SEXP _SamplingStrataC_concat(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(concat(x, y));
    return rcpp_result_gen;
END_RCPP
}
// stringrepRcpp2
std::vector<std::string> stringrepRcpp2(StringVector x, int y);
RcppExport SEXP _SamplingStrataC_stringrepRcpp2(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(stringrepRcpp2(x, y));
    return rcpp_result_gen;
END_RCPP
}
// crea_aRcpp
arma::mat crea_aRcpp(arma::vec N11, arma::mat s11, arma::vec nocens11, arma::mat m11, arma::vec cv11, double epsilon);
RcppExport SEXP _SamplingStrataC_crea_aRcpp(SEXP N11SEXP, SEXP s11SEXP, SEXP nocens11SEXP, SEXP m11SEXP, SEXP cv11SEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type N11(N11SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type s11(s11SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nocens11(nocens11SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type m11(m11SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cv11(cv11SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(crea_aRcpp(N11, s11, nocens11, m11, cv11, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// a13
arma::mat a13(arma::mat x);
RcppExport SEXP _SamplingStrataC_a13(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(a13(x));
    return rcpp_result_gen;
END_RCPP
}
// chromyNew1
NumericVector chromyNew1(double& alfatot, double& diff, int& iter, arma::vec alfa, arma::vec alfanext, arma::vec x, const arma::mat a, const arma::vec cost, const double& epsilon, const int& maxiter, const bool& realAllocation);
RcppExport SEXP _SamplingStrataC_chromyNew1(SEXP alfatotSEXP, SEXP diffSEXP, SEXP iterSEXP, SEXP alfaSEXP, SEXP alfanextSEXP, SEXP xSEXP, SEXP aSEXP, SEXP costSEXP, SEXP epsilonSEXP, SEXP maxiterSEXP, SEXP realAllocationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double& >::type alfatot(alfatotSEXP);
    Rcpp::traits::input_parameter< double& >::type diff(diffSEXP);
    Rcpp::traits::input_parameter< int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alfanext(alfanextSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type cost(costSEXP);
    Rcpp::traits::input_parameter< const double& >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const bool& >::type realAllocation(realAllocationSEXP);
    rcpp_result_gen = Rcpp::wrap(chromyNew1(alfatot, diff, iter, alfa, alfanext, x, a, cost, epsilon, maxiter, realAllocation));
    return rcpp_result_gen;
END_RCPP
}
// bethelRcppOpen
arma::vec bethelRcppOpen(DataFrame& stratif, DataFrame& errors, int minnumstrat, int maxiter, int maxiter1, LogicalVector printa, LogicalVector realAllocation, double epsilon);
RcppExport SEXP _SamplingStrataC_bethelRcppOpen(SEXP stratifSEXP, SEXP errorsSEXP, SEXP minnumstratSEXP, SEXP maxiterSEXP, SEXP maxiter1SEXP, SEXP printaSEXP, SEXP realAllocationSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type stratif(stratifSEXP);
    Rcpp::traits::input_parameter< DataFrame& >::type errors(errorsSEXP);
    Rcpp::traits::input_parameter< int >::type minnumstrat(minnumstratSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter1(maxiter1SEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type printa(printaSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type realAllocation(realAllocationSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(bethelRcppOpen(stratif, errors, minnumstrat, maxiter, maxiter1, printa, realAllocation, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// stdev_Rcpp
double stdev_Rcpp(DataFrame dataset, int i, double fitting, double range, int kappa);
RcppExport SEXP _SamplingStrataC_stdev_Rcpp(SEXP datasetSEXP, SEXP iSEXP, SEXP fittingSEXP, SEXP rangeSEXP, SEXP kappaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type dataset(datasetSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type fitting(fittingSEXP);
    Rcpp::traits::input_parameter< double >::type range(rangeSEXP);
    Rcpp::traits::input_parameter< int >::type kappa(kappaSEXP);
    rcpp_result_gen = Rcpp::wrap(stdev_Rcpp(dataset, i, fitting, range, kappa));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SamplingStrataC_Rcpp_sortDelta", (DL_FUNC) &_SamplingStrataC_Rcpp_sortDelta, 1},
    {"_SamplingStrataC_aggrStrata_RcppOpen", (DL_FUNC) &_SamplingStrataC_aggrStrata_RcppOpen, 5},
    {"_SamplingStrataC_uppercasevec", (DL_FUNC) &_SamplingStrataC_uppercasevec, 1},
    {"_SamplingStrataC_grepRcpp", (DL_FUNC) &_SamplingStrataC_grepRcpp, 2},
    {"_SamplingStrataC_seqRcpp", (DL_FUNC) &_SamplingStrataC_seqRcpp, 1},
    {"_SamplingStrataC_int_to_string", (DL_FUNC) &_SamplingStrataC_int_to_string, 1},
    {"_SamplingStrataC_paste3", (DL_FUNC) &_SamplingStrataC_paste3, 2},
    {"_SamplingStrataC_repRcpp", (DL_FUNC) &_SamplingStrataC_repRcpp, 2},
    {"_SamplingStrataC_repRcpp2", (DL_FUNC) &_SamplingStrataC_repRcpp2, 2},
    {"_SamplingStrataC_repRcppdouble", (DL_FUNC) &_SamplingStrataC_repRcppdouble, 2},
    {"_SamplingStrataC_testDFtoNM1", (DL_FUNC) &_SamplingStrataC_testDFtoNM1, 1},
    {"_SamplingStrataC_ordina_variabiliRcpp", (DL_FUNC) &_SamplingStrataC_ordina_variabiliRcpp, 3},
    {"_SamplingStrataC_ndomRcpp", (DL_FUNC) &_SamplingStrataC_ndomRcpp, 2},
    {"_SamplingStrataC_nvaluesRcpp", (DL_FUNC) &_SamplingStrataC_nvaluesRcpp, 2},
    {"_SamplingStrataC_crea_disjRcpp", (DL_FUNC) &_SamplingStrataC_crea_disjRcpp, 2},
    {"_SamplingStrataC_dfrow", (DL_FUNC) &_SamplingStrataC_dfrow, 2},
    {"_SamplingStrataC_int_to_charvec", (DL_FUNC) &_SamplingStrataC_int_to_charvec, 1},
    {"_SamplingStrataC_paste4", (DL_FUNC) &_SamplingStrataC_paste4, 2},
    {"_SamplingStrataC_testDFtoNM3", (DL_FUNC) &_SamplingStrataC_testDFtoNM3, 1},
    {"_SamplingStrataC_ordina_variabiliRcpp2", (DL_FUNC) &_SamplingStrataC_ordina_variabiliRcpp2, 3},
    {"_SamplingStrataC_cbindRcpp", (DL_FUNC) &_SamplingStrataC_cbindRcpp, 2},
    {"_SamplingStrataC_cbindRcpp1", (DL_FUNC) &_SamplingStrataC_cbindRcpp1, 2},
    {"_SamplingStrataC_vecconcat", (DL_FUNC) &_SamplingStrataC_vecconcat, 2},
    {"_SamplingStrataC_stringrepRcpp", (DL_FUNC) &_SamplingStrataC_stringrepRcpp, 2},
    {"_SamplingStrataC_concat", (DL_FUNC) &_SamplingStrataC_concat, 2},
    {"_SamplingStrataC_stringrepRcpp2", (DL_FUNC) &_SamplingStrataC_stringrepRcpp2, 2},
    {"_SamplingStrataC_crea_aRcpp", (DL_FUNC) &_SamplingStrataC_crea_aRcpp, 6},
    {"_SamplingStrataC_a13", (DL_FUNC) &_SamplingStrataC_a13, 1},
    {"_SamplingStrataC_chromyNew1", (DL_FUNC) &_SamplingStrataC_chromyNew1, 11},
    {"_SamplingStrataC_bethelRcppOpen", (DL_FUNC) &_SamplingStrataC_bethelRcppOpen, 8},
    {"_SamplingStrataC_stdev_Rcpp", (DL_FUNC) &_SamplingStrataC_stdev_Rcpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_SamplingStrataC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
